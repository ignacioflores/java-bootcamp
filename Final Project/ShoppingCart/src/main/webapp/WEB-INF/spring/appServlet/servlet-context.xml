<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="application/json"></beans:property>
	</beans:bean>

	<!-- Configure to plugin JSON as request and response in method handler -->
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/_shoppingcart" />
		<beans:property name="username" value="customer" />
		<beans:property name="password" value="bootcamp-java" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.Offer</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.OfferForShoppingCart</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.OfferForShoppingCartId</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.Payment</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.PayOrder</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.Product</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.ProductsForOffer</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.ProductsForOfferId</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.ProductsForShoppingCart</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.ProductsForShoppingCartId</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.ShoppingCart</beans:value>
				<beans:value>ar.com.ignacioflores.shoppingCart.model.User</beans:value>
				
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="offerDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.OfferDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="offerService" class="ar.com.ignacioflores.shoppingCart.service.implement.OfferServiceImpl">
		<beans:property name="offerDAO" ref="offerDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="offerForShoppingCartDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.OfferForShoppingCartDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="offerForShoppingCartService" class="ar.com.ignacioflores.shoppingCart.service.implement.OfferForShoppingCartServiceImpl">
		<beans:property name="offerForShoppingCartDAO" ref="offerForShoppingCartDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="offerForShoppingCartIdDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.OfferForShoppingCartIdDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="offerForShoppingCartIdService" class="ar.com.ignacioflores.shoppingCart.service.implement.OfferForShoppingCartIdServiceImpl">
		<beans:property name="offerForShoppingCartIdDAO" ref="offerForShoppingCartIdDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="paymentDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.PaymentDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="paymentService" class="ar.com.ignacioflores.shoppingCart.service.implement.PaymentServiceImpl">
		<beans:property name="paymentDAO" ref="paymentDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="payOrderDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.PayOrderDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="payOrderService" class="ar.com.ignacioflores.shoppingCart.service.implement.PayOrderServiceImpl">
		<beans:property name="payOrderDAO" ref="payOrderDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="productDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.ProductDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productService" class="ar.com.ignacioflores.shoppingCart.service.implement.ProductServiceImpl">
		<beans:property name="productDAO" ref="productDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="productsForOfferDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.ProductsForOfferDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productsForOfferService" class="ar.com.ignacioflores.shoppingCart.service.implement.ProductsForOfferServiceImpl">
		<beans:property name="productsForOfferDAO" ref="productsForOfferDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="productsForOfferIdDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.ProductsForOfferIdDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productsForOfferIdService" class="ar.com.ignacioflores.shoppingCart.service.implement.ProductsForOfferIdServiceImpl">
		<beans:property name="productsForOfferIdDAO" ref="productsForOfferIdDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="productsForShoppingCartDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.ProductsForShoppingCartDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productsForShoppingCartService" class="ar.com.ignacioflores.shoppingCart.service.implement.ProductsForShoppingCartServiceImpl">
		<beans:property name="productsForShoppingCartDAO" ref="productsForShoppingCartDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="productsForShoppingCartIdDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.ProductsForShoppingCartIdDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productsForShoppingCartIdService" class="ar.com.ignacioflores.shoppingCart.service.implement.ProductsForShoppingCartIdServiceImpl">
		<beans:property name="productsForShoppingCartIdDAO" ref="productsForShoppingCartIdDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="shoppingCartDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.ShoppingCartDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="shoppingCartService" class="ar.com.ignacioflores.shoppingCart.service.implement.ShoppingCartServiceImpl">
		<beans:property name="shoppingCartDAO" ref="shoppingCartDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="userDAO" class="ar.com.ignacioflores.shoppingCart.dao.implement.UserDAOImpl">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="userService" class="ar.com.ignacioflores.shoppingCart.service.implement.UserServiceImpl">
		<beans:property name="userDAO" ref="userDAO"></beans:property>
	</beans:bean>
	
	<context:component-scan base-package="ar.com.ignacioflores.shoppingCart" />
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
</beans:beans>
